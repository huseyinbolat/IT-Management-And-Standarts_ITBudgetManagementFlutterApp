define(['dart_sdk', 'packages/firebase_core_web/src/interop/utils/js.dart', 'packages/firebase_core_web/src/interop/utils/utils.dart', 'packages/firebase_auth_web/src/interop/utils/utils.dart', 'packages/http_parser/src/http_date.dart', 'packages/firebase_core_web/src/interop/app.dart'], (function load__packages__firebase_auth_web__src__interop__auth_dart(dart_sdk, packages__firebase_core_web__src__interop__utils__js$46dart, packages__firebase_core_web__src__interop__utils__utils$46dart, packages__firebase_auth_web__src__interop__utils__utils$46dart, packages__http_parser__src__http_date$46dart, packages__firebase_core_web__src__interop__app$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const js = dart_sdk.js;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const js$ = packages__firebase_core_web__src__interop__utils__js$46dart.src__interop__utils__js;
  const utils = packages__firebase_core_web__src__interop__utils__utils$46dart.src__interop__utils__utils;
  const utils$ = packages__firebase_auth_web__src__interop__utils__utils$46dart.src__interop__utils__utils;
  const http_date = packages__http_parser__src__http_date$46dart.src__http_date;
  const app = packages__firebase_core_web__src__interop__app$46dart.src__interop__app;
  var auth$ = Object.create(dart.library);
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    UserInfoOfUserInfoJsImplL: () => (T$.UserInfoOfUserInfoJsImplL = dart.constFn(auth$.UserInfo$(dart.legacy(dart.anonymousJSType("UserInfoJsImpl")))))(),
    UserInfoLOfUserInfoJsImplL: () => (T$.UserInfoLOfUserInfoJsImplL = dart.constFn(dart.legacy(T$.UserInfoOfUserInfoJsImplL())))(),
    dynamicToUserInfoLOfUserInfoJsImplL: () => (T$.dynamicToUserInfoLOfUserInfoJsImplL = dart.constFn(dart.fnType(T$.UserInfoLOfUserInfoJsImplL(), [dart.dynamic])))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    UserCredentialL: () => (T$.UserCredentialL = dart.constFn(dart.legacy(auth$.UserCredential)))(),
    UserCredentialJsImplLToUserCredentialL: () => (T$.UserCredentialJsImplLToUserCredentialL = dart.constFn(dart.fnType(T$.UserCredentialL(), [dart.legacy(dart.anonymousJSType("UserCredentialJsImpl"))])))(),
    ConfirmationResultL: () => (T$.ConfirmationResultL = dart.constFn(dart.legacy(auth$.ConfirmationResult)))(),
    ConfirmationResultJsImplLToConfirmationResultL: () => (T$.ConfirmationResultJsImplLToConfirmationResultL = dart.constFn(dart.fnType(T$.ConfirmationResultL(), [dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ConfirmationResult, "firebase.auth.ConfirmationResult"))])))(),
    UserL: () => (T$.UserL = dart.constFn(dart.legacy(auth$.User)))(),
    UserJsImplLToUserL: () => (T$.UserJsImplLToUserL = dart.constFn(dart.fnType(T$.UserL(), [dart.legacy(dart.anonymousJSType("UserJsImpl"))])))(),
    IdTokenResultL: () => (T$.IdTokenResultL = dart.constFn(dart.legacy(auth$.IdTokenResult)))(),
    IdTokenResultImplLToIdTokenResultL: () => (T$.IdTokenResultImplLToIdTokenResultL = dart.constFn(dart.fnType(T$.IdTokenResultL(), [dart.legacy(dart.anonymousJSType("IdTokenResultImpl"))])))(),
    MapOfStringL$dynamic: () => (T$.MapOfStringL$dynamic = dart.constFn(core.Map$(T$.StringL(), dart.dynamic)))(),
    MapLOfStringL$dynamic: () => (T$.MapLOfStringL$dynamic = dart.constFn(dart.legacy(T$.MapOfStringL$dynamic())))(),
    ExpandoOfUserL: () => (T$.ExpandoOfUserL = dart.constFn(core.Expando$(T$.UserL())))(),
    UserJsImplLToNull: () => (T$.UserJsImplLToNull = dart.constFn(dart.fnType(core.Null, [dart.legacy(dart.anonymousJSType("UserJsImpl"))])))(),
    UserJsImplLToLNull: () => (T$.UserJsImplLToLNull = dart.constFn(dart.legacy(T$.UserJsImplLToNull())))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    dynamicToLvoid: () => (T$.dynamicToLvoid = dart.constFn(dart.legacy(T$.dynamicTovoid())))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    StreamControllerOfUserL: () => (T$.StreamControllerOfUserL = dart.constFn(async.StreamController$(T$.UserL())))(),
    ListL: () => (T$.ListL = dart.constFn(dart.legacy(core.List)))(),
    ListOfStringL: () => (T$.ListOfStringL = dart.constFn(core.List$(T$.StringL())))(),
    ListLOfStringL: () => (T$.ListLOfStringL = dart.constFn(dart.legacy(T$.ListOfStringL())))(),
    ListLToListLOfStringL: () => (T$.ListLToListLOfStringL = dart.constFn(dart.fnType(T$.ListLOfStringL(), [T$.ListL()])))(),
    AuthL: () => (T$.AuthL = dart.constFn(dart.legacy(auth$.Auth)))(),
    ExpandoOfAuthL: () => (T$.ExpandoOfAuthL = dart.constFn(core.Expando$(T$.AuthL())))(),
    numL: () => (T$.numL = dart.constFn(dart.legacy(core.num)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(auth$.User.getInstance, T$.UserJsImplLToUserL());
    }
  }, false);
  var C = [void 0];
  var I = [
    "package:firebase_auth_web/src/interop/auth.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth_web-0.3.2+3/lib/src/interop/auth.dart"
  ];
  const _is_UserInfo_default = Symbol('_is_UserInfo_default');
  auth$.UserInfo$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    class UserInfo extends js$.JsObjectWrapper$(dart.legacy(T)) {
      get displayName() {
        return this.jsObject.displayName;
      }
      get email() {
        return this.jsObject.email;
      }
      get phoneNumber() {
        return this.jsObject.phoneNumber;
      }
      get photoURL() {
        return this.jsObject.photoURL;
      }
      get providerId() {
        return this.jsObject.providerId;
      }
      get uid() {
        return this.jsObject.uid;
      }
    }
    (UserInfo._fromJsObject = function(jsObject) {
      UserInfo.__proto__.fromJsObject.call(this, TL().as(jsObject));
      ;
    }).prototype = UserInfo.prototype;
    dart.addTypeTests(UserInfo);
    UserInfo.prototype[_is_UserInfo_default] = true;
    dart.addTypeCaches(UserInfo);
    dart.setGetterSignature(UserInfo, () => ({
      __proto__: dart.getGetters(UserInfo.__proto__),
      displayName: dart.legacy(core.String),
      email: dart.legacy(core.String),
      phoneNumber: dart.legacy(core.String),
      photoURL: dart.legacy(core.String),
      providerId: dart.legacy(core.String),
      uid: dart.legacy(core.String)
    }));
    dart.setLibraryUri(UserInfo, I[0]);
    return UserInfo;
  });
  auth$.UserInfo = auth$.UserInfo$();
  dart.addTypeTests(auth$.UserInfo, _is_UserInfo_default);
  auth$.User = class User extends auth$.UserInfo$(dart.legacy(dart.anonymousJSType("UserJsImpl"))) {
    get uid() {
      return this.jsObject.uid;
    }
    get emailVerified() {
      return this.jsObject.emailVerified;
    }
    get isAnonymous() {
      return this.jsObject.isAnonymous;
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get providerData() {
      return this.jsObject.providerData[$map](T$.UserInfoLOfUserInfoJsImplL(), dart.fn(data => new (T$.UserInfoOfUserInfoJsImplL())._fromJsObject(dart.legacy(dart.anonymousJSType("UserInfoJsImpl")).as(data)), T$.dynamicToUserInfoLOfUserInfoJsImplL()))[$toList]();
    }
    get refreshToken() {
      return this.jsObject.refreshToken;
    }
    static getInstance(jsObject) {
      let t3, t2, t1, t0;
      if (jsObject == null) {
        return null;
      }
      t0 = auth$.User._expando;
      t1 = jsObject;
      t2 = t0._get(t1);
      return t2 == null ? (t3 = new auth$.User._fromJsObject(jsObject), t0._set(t1, t3), t3) : t2;
    }
    delete() {
      return utils.handleThenable(dart.void, this.jsObject.delete());
    }
    getIdToken(forceRefresh = false) {
      return utils.handleThenable(T$.StringL(), this.jsObject.getIdToken(forceRefresh));
    }
    linkWithCredential(credential) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.linkWithCredential(credential)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils.handleThenable(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ConfirmationResult, "firebase.auth.ConfirmationResult")), this.jsObject.linkWithPhoneNumber(phoneNumber, applicationVerifier.jsObject)).then(T$.ConfirmationResultL(), dart.fn(c => new auth$.ConfirmationResult.fromJsObject(c), T$.ConfirmationResultJsImplLToConfirmationResultL()));
    }
    linkWithPopup(provider) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.linkWithPopup(provider.jsObject)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    linkWithRedirect(provider) {
      return utils.handleThenable(dart.void, this.jsObject.linkWithRedirect(provider.jsObject));
    }
    reauthenticateWithCredential(credential) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.reauthenticateWithCredential(credential)).then(T$.UserCredentialL(), dart.fn(o => new auth$.UserCredential.fromJsObject(o), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils.handleThenable(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ConfirmationResult, "firebase.auth.ConfirmationResult")), this.jsObject.reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier.jsObject)).then(T$.ConfirmationResultL(), dart.fn(c => new auth$.ConfirmationResult.fromJsObject(c), T$.ConfirmationResultJsImplLToConfirmationResultL()));
    }
    reauthenticateWithPopup(provider) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.reauthenticateWithPopup(provider.jsObject)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    reauthenticateWithRedirect(provider) {
      return utils.handleThenable(dart.void, this.jsObject.reauthenticateWithRedirect(provider.jsObject));
    }
    reload() {
      return utils.handleThenable(dart.void, this.jsObject.reload());
    }
    sendEmailVerification(actionCodeSettings = null) {
      return utils.handleThenable(dart.void, this.jsObject.sendEmailVerification(actionCodeSettings));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return utils.handleThenable(dart.void, this.jsObject.verifyBeforeUpdateEmail(newEmail, actionCodeSettings));
    }
    unlink(providerId) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserJsImpl")), this.jsObject.unlink(providerId)).then(T$.UserL(), C[0] || CT.C0);
    }
    updateEmail(newEmail) {
      return utils.handleThenable(dart.void, this.jsObject.updateEmail(newEmail));
    }
    updatePassword(newPassword) {
      return utils.handleThenable(dart.void, this.jsObject.updatePassword(newPassword));
    }
    updatePhoneNumber(phoneCredential) {
      return utils.handleThenable(dart.void, this.jsObject.updatePhoneNumber(phoneCredential));
    }
    updateProfile(profile) {
      return utils.handleThenable(dart.void, this.jsObject.updateProfile(profile));
    }
    getIdTokenResult(forceRefresh = null) {
      let promise = forceRefresh == null ? this.jsObject.getIdTokenResult() : this.jsObject.getIdTokenResult(forceRefresh);
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("IdTokenResultImpl")), promise).then(T$.IdTokenResultL(), dart.fn(object => new auth$.IdTokenResult._fromJsObject(object), T$.IdTokenResultImplLToIdTokenResultL()));
    }
    toJson() {
      return T$.MapLOfStringL$dynamic().as(utils$.dartify(this.jsObject.toJSON()));
    }
    toString() {
      return "User: " + dart.str(this.uid);
    }
  };
  (auth$.User._fromJsObject = function(jsObject) {
    auth$.User.__proto__._fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.User.prototype;
  dart.addTypeTests(auth$.User);
  dart.addTypeCaches(auth$.User);
  dart.setMethodSignature(auth$.User, () => ({
    __proto__: dart.getMethods(auth$.User.__proto__),
    delete: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    getIdToken: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.String))), [], [dart.legacy(core.bool)]),
    linkWithCredential: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(dart.anonymousJSType("OAuthCredential"))]),
    linkWithPhoneNumber: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.ConfirmationResult))), [dart.legacy(core.String), dart.legacy(auth$.ApplicationVerifier$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ApplicationVerifier, "firebase.auth.ApplicationVerifier"))))]),
    linkWithPopup: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    linkWithRedirect: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    reauthenticateWithCredential: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(dart.anonymousJSType("OAuthCredential"))]),
    reauthenticateWithPhoneNumber: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.ConfirmationResult))), [dart.legacy(core.String), dart.legacy(auth$.ApplicationVerifier$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ApplicationVerifier, "firebase.auth.ApplicationVerifier"))))]),
    reauthenticateWithPopup: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    reauthenticateWithRedirect: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    reload: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    sendEmailVerification: dart.fnType(dart.legacy(async.Future$(dart.void)), [], [dart.legacy(dart.anonymousJSType("ActionCodeSettings"))]),
    verifyBeforeUpdateEmail: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.String)], [dart.legacy(dart.anonymousJSType("ActionCodeSettings"))]),
    unlink: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.User))), [dart.legacy(core.String)]),
    updateEmail: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.String)]),
    updatePassword: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.String)]),
    updatePhoneNumber: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(dart.anonymousJSType("OAuthCredential"))]),
    updateProfile: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(dart.anonymousJSType("UserProfile"))]),
    getIdTokenResult: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.IdTokenResult))), [], [dart.legacy(core.bool)]),
    toJson: dart.fnType(dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic)), []),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(auth$.User, () => ({
    __proto__: dart.getGetters(auth$.User.__proto__),
    emailVerified: dart.legacy(core.bool),
    isAnonymous: dart.legacy(core.bool),
    tenantId: dart.legacy(core.String),
    metadata: dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.UserMetadata, "firebase.auth.UserMetadata")),
    providerData: dart.legacy(core.List$(dart.legacy(auth$.UserInfo$(dart.legacy(dart.anonymousJSType("UserInfoJsImpl")))))),
    refreshToken: dart.legacy(core.String)
  }));
  dart.setLibraryUri(auth$.User, I[0]);
  dart.defineExtensionMethods(auth$.User, ['toString']);
  dart.defineLazy(auth$.User, {
    /*auth$.User._expando*/get _expando() {
      return new (T$.ExpandoOfUserL()).new();
    }
  }, true);
  auth$.IdTokenResult = class IdTokenResult extends js$.JsObjectWrapper$(dart.legacy(dart.anonymousJSType("IdTokenResultImpl"))) {
    get authTime() {
      return http_date.parseHttpDate(this.jsObject.authTime);
    }
    get claims() {
      return T$.MapLOfStringL$dynamic().as(utils$.dartify(this.jsObject.claims));
    }
    get expirationTime() {
      return http_date.parseHttpDate(this.jsObject.expirationTime);
    }
    get issuedAtTime() {
      return http_date.parseHttpDate(this.jsObject.issuedAtTime);
    }
    get signInProvider() {
      return this.jsObject.signInProvider;
    }
    get token() {
      return this.jsObject.token;
    }
  };
  (auth$.IdTokenResult._fromJsObject = function(jsObject) {
    auth$.IdTokenResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.IdTokenResult.prototype;
  dart.addTypeTests(auth$.IdTokenResult);
  dart.addTypeCaches(auth$.IdTokenResult);
  dart.setGetterSignature(auth$.IdTokenResult, () => ({
    __proto__: dart.getGetters(auth$.IdTokenResult.__proto__),
    authTime: dart.legacy(core.DateTime),
    claims: dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic)),
    expirationTime: dart.legacy(core.DateTime),
    issuedAtTime: dart.legacy(core.DateTime),
    signInProvider: dart.legacy(core.String),
    token: dart.legacy(core.String)
  }));
  dart.setLibraryUri(auth$.IdTokenResult, I[0]);
  var _onAuthUnsubscribe = dart.privateName(auth$, "_onAuthUnsubscribe");
  var _changeController = dart.privateName(auth$, "_changeController");
  var _onIdTokenChangedUnsubscribe = dart.privateName(auth$, "_onIdTokenChangedUnsubscribe");
  var _idTokenChangedController = dart.privateName(auth$, "_idTokenChangedController");
  auth$.Auth = class Auth extends js$.JsObjectWrapper$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.Auth, "firebase.auth.Auth"))) {
    get app() {
      return app.App.getInstance(this.jsObject.app);
    }
    get currentUser() {
      return auth$.User.getInstance(this.jsObject.currentUser);
    }
    get languageCode() {
      return this.jsObject.languageCode;
    }
    set languageCode(s) {
      this.jsObject.languageCode = s;
    }
    get settings() {
      return this.jsObject.settings;
    }
    get onAuthStateChanged() {
      if (this[_changeController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplLToLNull(), dart.fn(user => {
          this[_changeController].add(auth$.User.getInstance(user));
        }, T$.UserJsImplLToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicToLvoid(), dart.fn(e => this[_changeController].addError(e), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[_onAuthUnsubscribe] == null)) dart.assertFailed(null, I[1], 333, 16, "_onAuthUnsubscribe == null");
          this[_onAuthUnsubscribe] = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          this[_onAuthUnsubscribe]();
          this[_onAuthUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[_changeController] = T$.StreamControllerOfUserL().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return this[_changeController].stream;
    }
    get onIdTokenChanged() {
      if (this[_idTokenChangedController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplLToLNull(), dart.fn(user => {
          this[_idTokenChangedController].add(auth$.User.getInstance(user));
        }, T$.UserJsImplLToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicToLvoid(), dart.fn(e => this[_idTokenChangedController].addError(e), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[_onIdTokenChangedUnsubscribe] == null)) dart.assertFailed(null, I[1], 368, 16, "_onIdTokenChangedUnsubscribe == null");
          this[_onIdTokenChangedUnsubscribe] = this.jsObject.onIdTokenChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          this[_onIdTokenChangedUnsubscribe]();
          this[_onIdTokenChangedUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[_idTokenChangedController] = T$.StreamControllerOfUserL().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return this[_idTokenChangedController].stream;
    }
    static getInstance(jsObject) {
      let t3, t2, t1, t0;
      if (jsObject == null) {
        return null;
      }
      t0 = auth$.Auth._expando;
      t1 = jsObject;
      t2 = t0._get(t1);
      return t2 == null ? (t3 = new auth$.Auth._fromJsObject(jsObject), t0._set(t1, t3), t3) : t2;
    }
    applyActionCode(code) {
      return utils.handleThenable(dart.dynamic, this.jsObject.applyActionCode(code));
    }
    checkActionCode(code) {
      return utils.handleThenable(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ActionCodeInfo, "firebase.auth.ActionCodeInfo")), this.jsObject.checkActionCode(code));
    }
    confirmPasswordReset(code, newPassword) {
      return utils.handleThenable(dart.dynamic, this.jsObject.confirmPasswordReset(code, newPassword));
    }
    createUserWithEmailAndPassword(email, password) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.createUserWithEmailAndPassword(email, password)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    fetchSignInMethodsForEmail(email) {
      return utils.handleThenable(T$.ListL(), this.jsObject.fetchSignInMethodsForEmail(email)).then(T$.ListLOfStringL(), dart.fn(list => T$.ListOfStringL().from(list), T$.ListLToListLOfStringL()));
    }
    isSignInWithEmailLink(emailLink) {
      return this.jsObject.isSignInWithEmailLink(emailLink);
    }
    getRedirectResult() {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.getRedirectResult()).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return utils.handleThenable(dart.dynamic, this.jsObject.sendSignInLinkToEmail(email, actionCodeSettings));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return utils.handleThenable(dart.dynamic, this.jsObject.sendPasswordResetEmail(email, actionCodeSettings));
    }
    setPersistence(persistence) {
      return utils.handleThenable(dart.dynamic, this.jsObject.setPersistence(persistence));
    }
    signInWithCredential(credential) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInWithCredential(credential)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInAnonymously() {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInAnonymously()).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInWithCustomToken(token) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInWithCustomToken(token)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInAndRetrieveDataWithCustomToken(token) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInAndRetrieveDataWithCustomToken(token)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInWithEmailAndPassword(email, password) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInWithEmailAndPassword(email, password)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInWithEmailLink(email, emailLink) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInWithEmailLink(email, emailLink)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils.handleThenable(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ConfirmationResult, "firebase.auth.ConfirmationResult")), this.jsObject.signInWithPhoneNumber(phoneNumber, applicationVerifier.jsObject)).then(T$.ConfirmationResultL(), dart.fn(c => new auth$.ConfirmationResult.fromJsObject(c), T$.ConfirmationResultJsImplLToConfirmationResultL()));
    }
    signInWithPopup(provider) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.signInWithPopup(provider.jsObject)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
    signInWithRedirect(provider) {
      return utils.handleThenable(dart.dynamic, this.jsObject.signInWithRedirect(provider.jsObject));
    }
    signOut() {
      return utils.handleThenable(dart.dynamic, this.jsObject.signOut());
    }
    useDeviceLanguage() {
      return this.jsObject.useDeviceLanguage();
    }
    verifyPasswordResetCode(code) {
      return utils.handleThenable(T$.StringL(), this.jsObject.verifyPasswordResetCode(code));
    }
  };
  (auth$.Auth._fromJsObject = function(jsObject) {
    this[_onAuthUnsubscribe] = null;
    this[_changeController] = null;
    this[_onIdTokenChangedUnsubscribe] = null;
    this[_idTokenChangedController] = null;
    auth$.Auth.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.Auth.prototype;
  dart.addTypeTests(auth$.Auth);
  dart.addTypeCaches(auth$.Auth);
  dart.setMethodSignature(auth$.Auth, () => ({
    __proto__: dart.getMethods(auth$.Auth.__proto__),
    applyActionCode: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)]),
    checkActionCode: dart.fnType(dart.legacy(async.Future$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ActionCodeInfo, "firebase.auth.ActionCodeInfo")))), [dart.legacy(core.String)]),
    confirmPasswordReset: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String), dart.legacy(core.String)]),
    createUserWithEmailAndPassword: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String), dart.legacy(core.String)]),
    fetchSignInMethodsForEmail: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.List$(dart.legacy(core.String))))), [dart.legacy(core.String)]),
    isSignInWithEmailLink: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.String)]),
    getRedirectResult: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), []),
    sendSignInLinkToEmail: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)], [dart.legacy(dart.anonymousJSType("ActionCodeSettings"))]),
    sendPasswordResetEmail: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)], [dart.legacy(dart.anonymousJSType("ActionCodeSettings"))]),
    setPersistence: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)]),
    signInWithCredential: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(dart.anonymousJSType("OAuthCredential"))]),
    signInAnonymously: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), []),
    signInWithCustomToken: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String)]),
    signInAndRetrieveDataWithCustomToken: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String)]),
    signInWithEmailAndPassword: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String), dart.legacy(core.String)]),
    signInWithEmailLink: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String), dart.legacy(core.String)]),
    signInWithPhoneNumber: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.ConfirmationResult))), [dart.legacy(core.String), dart.legacy(auth$.ApplicationVerifier$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ApplicationVerifier, "firebase.auth.ApplicationVerifier"))))]),
    signInWithPopup: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    signInWithRedirect: dart.fnType(dart.legacy(async.Future), [dart.legacy(auth$.AuthProvider$(dart.legacy(dart.anonymousJSType("AuthProviderJsImpl"))))]),
    signOut: dart.fnType(dart.legacy(async.Future), []),
    useDeviceLanguage: dart.fnType(dart.void, []),
    verifyPasswordResetCode: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.String))), [dart.legacy(core.String)])
  }));
  dart.setGetterSignature(auth$.Auth, () => ({
    __proto__: dart.getGetters(auth$.Auth.__proto__),
    app: dart.legacy(app.App),
    currentUser: dart.legacy(auth$.User),
    languageCode: dart.legacy(core.String),
    settings: dart.legacy(dart.anonymousJSType("AuthSettings")),
    onAuthStateChanged: dart.legacy(async.Stream$(dart.legacy(auth$.User))),
    onIdTokenChanged: dart.legacy(async.Stream$(dart.legacy(auth$.User)))
  }));
  dart.setSetterSignature(auth$.Auth, () => ({
    __proto__: dart.getSetters(auth$.Auth.__proto__),
    languageCode: dart.legacy(core.String)
  }));
  dart.setLibraryUri(auth$.Auth, I[0]);
  dart.setFieldSignature(auth$.Auth, () => ({
    __proto__: dart.getFields(auth$.Auth.__proto__),
    [_onAuthUnsubscribe]: dart.fieldType(dart.legacy(dart.fnType(dart.dynamic, []))),
    [_changeController]: dart.fieldType(dart.legacy(async.StreamController$(dart.legacy(auth$.User)))),
    [_onIdTokenChangedUnsubscribe]: dart.fieldType(dart.legacy(dart.fnType(dart.dynamic, []))),
    [_idTokenChangedController]: dart.fieldType(dart.legacy(async.StreamController$(dart.legacy(auth$.User))))
  }));
  dart.defineLazy(auth$.Auth, {
    /*auth$.Auth._expando*/get _expando() {
      return new (T$.ExpandoOfAuthL()).new();
    }
  }, true);
  const _is_AuthProvider_default = Symbol('_is_AuthProvider_default');
  auth$.AuthProvider$ = dart.generic(T => {
    class AuthProvider extends js$.JsObjectWrapper$(dart.legacy(T)) {
      get providerId() {
        return this.jsObject.providerId;
      }
    }
    (AuthProvider.fromJsObject = function(jsObject) {
      AuthProvider.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = AuthProvider.prototype;
    dart.addTypeTests(AuthProvider);
    AuthProvider.prototype[_is_AuthProvider_default] = true;
    dart.addTypeCaches(AuthProvider);
    dart.setGetterSignature(AuthProvider, () => ({
      __proto__: dart.getGetters(AuthProvider.__proto__),
      providerId: dart.legacy(core.String)
    }));
    dart.setLibraryUri(AuthProvider, I[0]);
    return AuthProvider;
  });
  auth$.AuthProvider = auth$.AuthProvider$();
  dart.addTypeTests(auth$.AuthProvider, _is_AuthProvider_default);
  auth$.EmailAuthProvider = class EmailAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.EmailAuthProvider, "firebase.auth.EmailAuthProvider"))) {
    static new() {
      return new auth$.EmailAuthProvider.fromJsObject(new dart.global.firebase.auth.EmailAuthProvider());
    }
    static credential(email, password) {
      return dart.legacy(dart.anonymousJSType("OAuthCredential")).as(dart.global.firebase.auth.EmailAuthProvider.credential(email, password));
    }
    static credentialWithLink(email, emailLink) {
      return dart.legacy(dart.anonymousJSType("OAuthCredential")).as(dart.global.firebase.auth.EmailAuthProvider.credentialWithLink(email, emailLink));
    }
  };
  (auth$.EmailAuthProvider.fromJsObject = function(jsObject) {
    auth$.EmailAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.EmailAuthProvider.prototype;
  dart.addTypeTests(auth$.EmailAuthProvider);
  dart.addTypeCaches(auth$.EmailAuthProvider);
  dart.setLibraryUri(auth$.EmailAuthProvider, I[0]);
  dart.defineLazy(auth$.EmailAuthProvider, {
    /*auth$.EmailAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase.auth.EmailAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(_) {}
  }, true);
  auth$.FacebookAuthProvider = class FacebookAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.FacebookAuthProvider, "firebase.auth.FacebookAuthProvider"))) {
    static new() {
      return new auth$.FacebookAuthProvider.fromJsObject(new dart.global.firebase.auth.FacebookAuthProvider());
    }
    addScope(scope) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase.auth.FacebookAuthProvider.credential(token);
    }
  };
  (auth$.FacebookAuthProvider.fromJsObject = function(jsObject) {
    auth$.FacebookAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.FacebookAuthProvider.prototype;
  dart.addTypeTests(auth$.FacebookAuthProvider);
  dart.addTypeCaches(auth$.FacebookAuthProvider);
  dart.setMethodSignature(auth$.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(dart.legacy(auth$.FacebookAuthProvider), [dart.legacy(core.String)]),
    setCustomParameters: dart.fnType(dart.legacy(auth$.FacebookAuthProvider), [dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))])
  }));
  dart.setLibraryUri(auth$.FacebookAuthProvider, I[0]);
  dart.defineLazy(auth$.FacebookAuthProvider, {
    /*auth$.FacebookAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase.auth.FacebookAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(_) {}
  }, true);
  auth$.GithubAuthProvider = class GithubAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.GithubAuthProvider, "firebase.auth.GithubAuthProvider"))) {
    static new() {
      return new auth$.GithubAuthProvider.fromJsObject(new dart.global.firebase.auth.GithubAuthProvider());
    }
    addScope(scope) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase.auth.GithubAuthProvider.credential(token);
    }
  };
  (auth$.GithubAuthProvider.fromJsObject = function(jsObject) {
    auth$.GithubAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GithubAuthProvider.prototype;
  dart.addTypeTests(auth$.GithubAuthProvider);
  dart.addTypeCaches(auth$.GithubAuthProvider);
  dart.setMethodSignature(auth$.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GithubAuthProvider.__proto__),
    addScope: dart.fnType(dart.legacy(auth$.GithubAuthProvider), [dart.legacy(core.String)]),
    setCustomParameters: dart.fnType(dart.legacy(auth$.GithubAuthProvider), [dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))])
  }));
  dart.setLibraryUri(auth$.GithubAuthProvider, I[0]);
  dart.defineLazy(auth$.GithubAuthProvider, {
    /*auth$.GithubAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase.auth.GithubAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(_) {}
  }, true);
  auth$.GoogleAuthProvider = class GoogleAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.GoogleAuthProvider, "firebase.auth.GoogleAuthProvider"))) {
    static new() {
      return new auth$.GoogleAuthProvider.fromJsObject(new dart.global.firebase.auth.GoogleAuthProvider());
    }
    addScope(scope) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(idToken = null, accessToken = null) {
      return dart.global.firebase.auth.GoogleAuthProvider.credential(idToken, accessToken);
    }
  };
  (auth$.GoogleAuthProvider.fromJsObject = function(jsObject) {
    auth$.GoogleAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GoogleAuthProvider.prototype;
  dart.addTypeTests(auth$.GoogleAuthProvider);
  dart.addTypeCaches(auth$.GoogleAuthProvider);
  dart.setMethodSignature(auth$.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(dart.legacy(auth$.GoogleAuthProvider), [dart.legacy(core.String)]),
    setCustomParameters: dart.fnType(dart.legacy(auth$.GoogleAuthProvider), [dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))])
  }));
  dart.setLibraryUri(auth$.GoogleAuthProvider, I[0]);
  dart.defineLazy(auth$.GoogleAuthProvider, {
    /*auth$.GoogleAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase.auth.GoogleAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(_) {}
  }, true);
  auth$.OAuthProvider = class OAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.OAuthProvider, "firebase.auth.OAuthProvider"))) {
    static new(providerId) {
      return new auth$.OAuthProvider.fromJsObject(new dart.global.firebase.auth.OAuthProvider(providerId));
    }
    addScope(scope) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    credential(idToken = null, accessToken = null) {
      return this.jsObject.credential(idToken, accessToken);
    }
  };
  (auth$.OAuthProvider.fromJsObject = function(jsObject) {
    auth$.OAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.OAuthProvider.prototype;
  dart.addTypeTests(auth$.OAuthProvider);
  dart.addTypeCaches(auth$.OAuthProvider);
  dart.setMethodSignature(auth$.OAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.OAuthProvider.__proto__),
    addScope: dart.fnType(dart.legacy(auth$.OAuthProvider), [dart.legacy(core.String)]),
    setCustomParameters: dart.fnType(dart.legacy(auth$.OAuthProvider), [dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))]),
    credential: dart.fnType(dart.legacy(dart.anonymousJSType("OAuthCredential")), [], [dart.legacy(core.String), dart.legacy(core.String)])
  }));
  dart.setLibraryUri(auth$.OAuthProvider, I[0]);
  auth$.TwitterAuthProvider = class TwitterAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.TwitterAuthProvider, "firebase.auth.TwitterAuthProvider"))) {
    static new() {
      return new auth$.TwitterAuthProvider.fromJsObject(new dart.global.firebase.auth.TwitterAuthProvider());
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.TwitterAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token, secret) {
      return dart.global.firebase.auth.TwitterAuthProvider.credential(token, secret);
    }
  };
  (auth$.TwitterAuthProvider.fromJsObject = function(jsObject) {
    auth$.TwitterAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.TwitterAuthProvider.prototype;
  dart.addTypeTests(auth$.TwitterAuthProvider);
  dart.addTypeCaches(auth$.TwitterAuthProvider);
  dart.setMethodSignature(auth$.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(dart.legacy(auth$.TwitterAuthProvider), [dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))])
  }));
  dart.setLibraryUri(auth$.TwitterAuthProvider, I[0]);
  dart.defineLazy(auth$.TwitterAuthProvider, {
    /*auth$.TwitterAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase.auth.TwitterAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(_) {}
  }, true);
  auth$.PhoneAuthProvider = class PhoneAuthProvider extends auth$.AuthProvider$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.PhoneAuthProvider, "firebase.auth.PhoneAuthProvider"))) {
    static get PROVIDER_ID() {
      return dart.global.firebase.auth.PhoneAuthProvider.PROVIDER_ID;
    }
    static new(auth = null) {
      return new auth$.PhoneAuthProvider.fromJsObject(auth != null ? new dart.global.firebase.auth.PhoneAuthProvider(auth.jsObject) : new dart.global.firebase.auth.PhoneAuthProvider());
    }
    verifyPhoneNumber(phoneNumber, applicationVerifier) {
      return utils.handleThenable(T$.StringL(), this.jsObject.verifyPhoneNumber(phoneNumber, applicationVerifier.jsObject));
    }
    static credential(verificationId, verificationCode) {
      return dart.legacy(dart.anonymousJSType("OAuthCredential")).as(dart.global.firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode));
    }
  };
  (auth$.PhoneAuthProvider.fromJsObject = function(jsObject) {
    auth$.PhoneAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.PhoneAuthProvider.prototype;
  dart.addTypeTests(auth$.PhoneAuthProvider);
  dart.addTypeCaches(auth$.PhoneAuthProvider);
  dart.setMethodSignature(auth$.PhoneAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.PhoneAuthProvider.__proto__),
    verifyPhoneNumber: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.String))), [dart.legacy(core.String), dart.legacy(auth$.ApplicationVerifier$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ApplicationVerifier, "firebase.auth.ApplicationVerifier"))))])
  }));
  dart.setLibraryUri(auth$.PhoneAuthProvider, I[0]);
  const _is_ApplicationVerifier_default = Symbol('_is_ApplicationVerifier_default');
  auth$.ApplicationVerifier$ = dart.generic(T => {
    class ApplicationVerifier extends js$.JsObjectWrapper$(dart.legacy(T)) {
      get type() {
        return this.jsObject.type;
      }
      verify() {
        return utils.handleThenable(T$.StringL(), this.jsObject.verify());
      }
    }
    (ApplicationVerifier.fromJsObject = function(jsObject) {
      ApplicationVerifier.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = ApplicationVerifier.prototype;
    dart.addTypeTests(ApplicationVerifier);
    ApplicationVerifier.prototype[_is_ApplicationVerifier_default] = true;
    dart.addTypeCaches(ApplicationVerifier);
    dart.setMethodSignature(ApplicationVerifier, () => ({
      __proto__: dart.getMethods(ApplicationVerifier.__proto__),
      verify: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.String))), [])
    }));
    dart.setGetterSignature(ApplicationVerifier, () => ({
      __proto__: dart.getGetters(ApplicationVerifier.__proto__),
      type: dart.legacy(core.String)
    }));
    dart.setLibraryUri(ApplicationVerifier, I[0]);
    return ApplicationVerifier;
  });
  auth$.ApplicationVerifier = auth$.ApplicationVerifier$();
  dart.addTypeTests(auth$.ApplicationVerifier, _is_ApplicationVerifier_default);
  auth$.RecaptchaVerifier = class RecaptchaVerifier extends auth$.ApplicationVerifier$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.RecaptchaVerifier, "firebase.auth.RecaptchaVerifier"))) {
    static new(container, parameters = null, app = null) {
      return parameters != null ? app != null ? new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase.auth.RecaptchaVerifier(container, utils$.jsify(parameters), app.jsObject)) : new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase.auth.RecaptchaVerifier(container, utils$.jsify(parameters))) : new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase.auth.RecaptchaVerifier(container));
    }
    clear() {
      return this.jsObject.clear();
    }
    render() {
      return utils.handleThenable(T$.numL(), this.jsObject.render());
    }
  };
  (auth$.RecaptchaVerifier.fromJsObject = function(jsObject) {
    auth$.RecaptchaVerifier.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.RecaptchaVerifier.prototype;
  dart.addTypeTests(auth$.RecaptchaVerifier);
  dart.addTypeCaches(auth$.RecaptchaVerifier);
  dart.setMethodSignature(auth$.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(auth$.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.num))), [])
  }));
  dart.setLibraryUri(auth$.RecaptchaVerifier, I[0]);
  auth$.ConfirmationResult = class ConfirmationResult extends js$.JsObjectWrapper$(dart.legacy(dart.lazyJSType(() => dart.global.firebase.auth.ConfirmationResult, "firebase.auth.ConfirmationResult"))) {
    get verificationId() {
      return this.jsObject.verificationId;
    }
    confirm(verificationCode) {
      return utils.handleThenable(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl")), this.jsObject.confirm(verificationCode)).then(T$.UserCredentialL(), dart.fn(u => new auth$.UserCredential.fromJsObject(u), T$.UserCredentialJsImplLToUserCredentialL()));
    }
  };
  (auth$.ConfirmationResult.fromJsObject = function(jsObject) {
    auth$.ConfirmationResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.ConfirmationResult.prototype;
  dart.addTypeTests(auth$.ConfirmationResult);
  dart.addTypeCaches(auth$.ConfirmationResult);
  dart.setMethodSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getMethods(auth$.ConfirmationResult.__proto__),
    confirm: dart.fnType(dart.legacy(async.Future$(dart.legacy(auth$.UserCredential))), [dart.legacy(core.String)])
  }));
  dart.setGetterSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getGetters(auth$.ConfirmationResult.__proto__),
    verificationId: dart.legacy(core.String)
  }));
  dart.setLibraryUri(auth$.ConfirmationResult, I[0]);
  auth$.UserCredential = class UserCredential extends js$.JsObjectWrapper$(dart.legacy(dart.anonymousJSType("UserCredentialJsImpl"))) {
    get user() {
      return auth$.User.getInstance(this.jsObject.user);
    }
    get credential() {
      return this.jsObject.credential;
    }
    get operationType() {
      return this.jsObject.operationType;
    }
    get additionalUserInfo() {
      return new auth$.AdditionalUserInfo.fromJsObject(this.jsObject.additionalUserInfo);
    }
  };
  (auth$.UserCredential.fromJsObject = function(jsObject) {
    auth$.UserCredential.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.UserCredential.prototype;
  dart.addTypeTests(auth$.UserCredential);
  dart.addTypeCaches(auth$.UserCredential);
  dart.setGetterSignature(auth$.UserCredential, () => ({
    __proto__: dart.getGetters(auth$.UserCredential.__proto__),
    user: dart.legacy(auth$.User),
    credential: dart.legacy(dart.anonymousJSType("OAuthCredential")),
    operationType: dart.legacy(core.String),
    additionalUserInfo: dart.legacy(auth$.AdditionalUserInfo)
  }));
  dart.setLibraryUri(auth$.UserCredential, I[0]);
  auth$.AdditionalUserInfo = class AdditionalUserInfo extends js$.JsObjectWrapper$(dart.legacy(dart.anonymousJSType("AdditionalUserInfoJsImpl"))) {
    get providerId() {
      return this.jsObject.providerId;
    }
    get profile() {
      return T$.MapLOfStringL$dynamic().as(utils$.dartify(this.jsObject.profile));
    }
    get username() {
      return this.jsObject.username;
    }
    get isNewUser() {
      return this.jsObject.isNewUser;
    }
  };
  (auth$.AdditionalUserInfo.fromJsObject = function(jsObject) {
    auth$.AdditionalUserInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.AdditionalUserInfo.prototype;
  dart.addTypeTests(auth$.AdditionalUserInfo);
  dart.addTypeCaches(auth$.AdditionalUserInfo);
  dart.setGetterSignature(auth$.AdditionalUserInfo, () => ({
    __proto__: dart.getGetters(auth$.AdditionalUserInfo.__proto__),
    providerId: dart.legacy(core.String),
    profile: dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic)),
    username: dart.legacy(core.String),
    isNewUser: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(auth$.AdditionalUserInfo, I[0]);
  auth$.getAuthInstance = function getAuthInstance(app = null) {
    return auth$.Auth.getInstance(app != null ? dart.global.firebase.auth(app.jsObject) : dart.global.firebase.auth());
  };
  dart.trackLibraries("packages/firebase_auth_web/src/interop/auth.dart", {
    "package:firebase_auth_web/src/interop/auth.dart": auth$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["auth.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/firebase_auth_web/src/interop/auth.dart.lib.js"}');
  // Exports:
  return {
    src__interop__auth: auth$
  };
}));

//# sourceMappingURL=auth.dart.lib.js.map
